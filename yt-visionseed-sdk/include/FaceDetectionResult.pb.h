/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 at Mon Jun 15 20:08:28 2020. */

#ifndef PB_FACEDETECTIONRESULT_PB_H_INCLUDED
#define PB_FACEDETECTIONRESULT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Face_FaceProperty {
    Face_FaceProperty_GLASS = 0,
    Face_FaceProperty_MASK = 1,
    Face_FaceProperty_HAT = 2
} Face_FaceProperty;
#define _Face_FaceProperty_MIN Face_FaceProperty_GLASS
#define _Face_FaceProperty_MAX Face_FaceProperty_HAT
#define _Face_FaceProperty_ARRAYSIZE ((Face_FaceProperty)(Face_FaceProperty_HAT+1))

typedef enum _Face_Gender {
    Face_Gender_GIRL = 0,
    Face_Gender_BOY = 1
} Face_Gender;
#define _Face_Gender_MIN Face_Gender_GIRL
#define _Face_Gender_MAX Face_Gender_BOY
#define _Face_Gender_ARRAYSIZE ((Face_Gender)(Face_Gender_BOY+1))

/* Struct definitions */
typedef struct _FaceShape {
    pb_size_t x_count;
    float x[90];
    pb_size_t y_count;
    float y[90];
    pb_size_t visibility_count;
    float visibility[90];
    float confidence;
/* @@protoc_insertion_point(struct:FaceShape) */
} FaceShape;

typedef struct _Pose {
    float roll;
    float yaw;
    float pitch;
/* @@protoc_insertion_point(struct:Pose) */
} Pose;

typedef struct _Rect {
    int32_t x;
    int32_t y;
    int32_t w;
    int32_t h;
/* @@protoc_insertion_point(struct:Rect) */
} Rect;

typedef struct _Face {
    Rect rect;
    bool has_shape;
    FaceShape shape;
    bool has_pose;
    Pose pose;
    float confidence;
    bool has_traceId;
    uint32_t traceId;
    bool has_quality;
    float quality;
    bool has_nameConfidence;
    float nameConfidence;
    bool has_name;
    char name[32];
    bool has_age;
    int32_t age;
    pb_size_t properties_count;
    Face_FaceProperty properties[4];
    bool has_gender;
    Face_Gender gender;
    bool has_alive;
    bool alive;
/* @@protoc_insertion_point(struct:Face) */
} Face;

typedef struct _FaceDetectionResult {
    int32_t width;
    int32_t height;
    pb_size_t face_count;
    Face face[1];
/* @@protoc_insertion_point(struct:FaceDetectionResult) */
} FaceDetectionResult;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Rect_init_default                        {0, 0, 0, 0}
#define Pose_init_default                        {0, 0, 0}
#define FaceShape_init_default                   {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define Face_init_default                        {Rect_init_default, false, FaceShape_init_default, false, Pose_init_default, 0, false, 0, false, 0, false, 0, false, "", false, 0, 0, {_Face_FaceProperty_MIN, _Face_FaceProperty_MIN, _Face_FaceProperty_MIN, _Face_FaceProperty_MIN}, false, _Face_Gender_MIN, false, 0}
#define FaceDetectionResult_init_default         {0, 0, 0, {Face_init_default}}
#define Rect_init_zero                           {0, 0, 0, 0}
#define Pose_init_zero                           {0, 0, 0}
#define FaceShape_init_zero                      {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0}
#define Face_init_zero                           {Rect_init_zero, false, FaceShape_init_zero, false, Pose_init_zero, 0, false, 0, false, 0, false, 0, false, "", false, 0, 0, {_Face_FaceProperty_MIN, _Face_FaceProperty_MIN, _Face_FaceProperty_MIN, _Face_FaceProperty_MIN}, false, _Face_Gender_MIN, false, 0}
#define FaceDetectionResult_init_zero            {0, 0, 0, {Face_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define FaceShape_x_tag                          1
#define FaceShape_y_tag                          2
#define FaceShape_visibility_tag                 3
#define FaceShape_confidence_tag                 4
#define Pose_roll_tag                            1
#define Pose_yaw_tag                             2
#define Pose_pitch_tag                           3
#define Rect_x_tag                               1
#define Rect_y_tag                               2
#define Rect_w_tag                               3
#define Rect_h_tag                               4
#define Face_rect_tag                            1
#define Face_shape_tag                           2
#define Face_pose_tag                            3
#define Face_confidence_tag                      4
#define Face_traceId_tag                         5
#define Face_quality_tag                         6
#define Face_nameConfidence_tag                  9
#define Face_name_tag                            10
#define Face_age_tag                             11
#define Face_properties_tag                      12
#define Face_gender_tag                          13
#define Face_alive_tag                           14
#define FaceDetectionResult_width_tag            1
#define FaceDetectionResult_height_tag           2
#define FaceDetectionResult_face_tag             3

/* Struct field encoding specification for nanopb */
extern const pb_field_t Rect_fields[5];
extern const pb_field_t Pose_fields[4];
extern const pb_field_t FaceShape_fields[5];
extern const pb_field_t Face_fields[13];
extern const pb_field_t FaceDetectionResult_fields[4];

/* Maximum encoded size of messages (where known) */
#define Rect_size                                44
#define Pose_size                                15
#define FaceShape_size                           1355
#define Face_size                                1499
#define FaceDetectionResult_size                 1525

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FACEDETECTIONRESULT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
