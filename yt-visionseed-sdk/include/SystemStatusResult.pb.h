/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 at Fri Apr 17 15:16:46 2020. */

#ifndef PB_SYSTEMSTATUSRESULT_PB_H_INCLUDED
#define PB_SYSTEMSTATUSRESULT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SystemStatusResult {
    int32_t heartBeatId;
    pb_size_t temperatures_count;
    float temperatures[4];
    pb_size_t powers_count;
    float powers[2];
    int32_t freeHeap;
/* @@protoc_insertion_point(struct:SystemStatusResult) */
} SystemStatusResult;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SystemStatusResult_init_default          {0, 0, {0, 0, 0, 0}, 0, {0, 0}, 0}
#define SystemStatusResult_init_zero             {0, 0, {0, 0, 0, 0}, 0, {0, 0}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SystemStatusResult_heartBeatId_tag       1
#define SystemStatusResult_temperatures_tag      2
#define SystemStatusResult_powers_tag            3
#define SystemStatusResult_freeHeap_tag          4

/* Struct field encoding specification for nanopb */
extern const pb_field_t SystemStatusResult_fields[5];

/* Maximum encoded size of messages (where known) */
#define SystemStatusResult_size                  52

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SYSTEMSTATUSRESULT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
